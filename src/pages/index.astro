---
import Earth from "@/components/Earth/Earth";
import Greeting from "@/components/Greeting/Greeting.astro";
import Overview from "@/components/Overview/Overview.astro";
import type { ProjectsProps } from "@/components/Projects/Projects.astro";
import Layout, { LayoutProps } from "@/layouts/Layout/Layout.astro";
import Projects from "@/components/Projects/Projects.astro";
import onlineGalleryScreenshot from "@/assets/online-gallery-screenshot.png";
import onlineShopScreenshot from "@/assets/online-shop-screenshot.png";
import restaurantScreenshot from "@/assets/restaurant-screenshot.png";

const layoutProps: LayoutProps = {
  title: "udborets",
};

const projects: ProjectsProps = {
  projects: [
    {
      title: "Restaurant app",
      description: `Frontend MPA restaurant landing page app. Built with Astro and React. Using React Hook Form for Feedback form.`,
      imgSrc: restaurantScreenshot,
      techStack: `Typescript, Astro, React, React Hook Form, TailwindCSS, SCSS`,
      githubHref: "restaurant-app",
      domainHref: "https://udborets-puntodisapori.vercel.app",
      domainName: "Punto Di Sapori",
    },
    {
      title: "Weather app",
      description: `Frontend SPA weather app created for searching city and getting 
      weather for the next five days by chosen city. In this project I am working with weather api. 
      It is built with NextJS 13 experimental app directory and api route. 
      The queries are handled with React Query and Axios. 
      Getting cities info from MongoDB Database. Using Zustand as global state manager`,
      imgSrc: "",
      techStack: `Typescript, React, NextJS, TailwindCSS, SCSS, MongoDB, Axios, React Query`,
      githubHref: "weather-app",
      domainHref: "https://udborets-myweather.vercel.app",
      domainName: "My Weather",
    },
    {
      title: "Online Gallery",
      description: `Fullstack SPA gallery app which allows to login by 
      Email with Firebase authentication, create folders and upload 
      photos to them, that twill be saved in Firebase storage. 
      Built with Vite React build on Frontend and Express NodeJS on Backend, connected with tRPC and  
      handles queries with React Query and saving user info in PostgreSQL database with Prisma`,
      imgSrc: onlineGalleryScreenshot,
      techStack:
        "Typescript, React, SCSS, React RTK, Firebase Authentication, Firebase Storage, React Router DOM, React Query, NodeJS, tRPC, Prisma, Zod",
      githubHref: "online-gallery",
    },
    {
      title: "Online Shop",
      description: `Fullstack single page shop application that can be used for logging in as admin, 
      creating product catalog with custom product types and brands and other product attributes, which are saved in 
      PostgreSQL database. This project is built with Vite React build on Frontend 
      and Express NodeJS on Backend with authentication using JWT`,
      imgSrc: onlineShopScreenshot,
      techStack: `Typescript, React, React RTK, React Router DOM, SCSS, Axios, Express, PostgreSQL, Sequelize`,
      githubHref: "online-shop",
    },
  ],
};
---

<Layout {...layoutProps}>
  <main
    class="homePage text-white w-full p-10 flex flex-col gap-[2rem] overflow-x-hidden items-center h-full mt-[50px]"
  >
    <Greeting />
    <Earth client:load />
    <Overview />
    <Projects {...projects} />
  </main>
</Layout>
